{
  "name": "seneca-protocol",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack",
    "build": "npm run typecheck && npm run lint && next build",
    "start": "next start",
    "lint": "eslint . --ext .ts,.tsx --cache",
    "lint:ci": "eslint . --ext .ts,.tsx --max-warnings=0",
    "format": "prettier --write .",
    "build:check": "next build --no-lint",
    "typecheck": "tsc -p tsconfig.json --noEmit",
    "prepare": "husky install",
    "test": "vitest",
    "test:unit": "vitest run",
    "test:watch": "vitest watch",
    "test:coverage": "vitest run --coverage",
    "test:e2e": "playwright test",
    "verify": "npm run typecheck && npm run lint",
    "ci": "npm run typecheck && npm run lint:ci && npm run test:unit && npm run build",
    "ai:test": "echo 'AI tests are for reference only - see .ai/tests/'",
    "ai:migrate": "./migrate-ai-files.sh",
    "ai:prune": "rm -rf .ai/artifacts/*",
    "ai:docs": "open .ai/docs/BUILD_LOG.md 2>/dev/null || xdg-open .ai/docs/BUILD_LOG.md 2>/dev/null || echo 'See .ai/docs/BUILD_LOG.md'",
    "ai:verify-imports": "node -e \"const {execSync}=require('child_process'); try{execSync('rg -n \\\"from [\\\\'\\\\\\\"]\\\\.?\\\\.?/.ai/|import .* from [\\\\'\\\\\\\"]\\\\.?\\\\.?/.ai/\\\" --glob \\\"!node_modules\\\" --glob \\\"!.ai/**\\\"', {stdio:'inherit'}); process.exit(1);}catch(e){process.exit(0);}\"",
    "supabase:types": "npx supabase gen types typescript --project-id ahggunjqfvlmvgycisgc --schema public > lib/database.generated.ts",
    "supabase:types:safe": "bash -c 'set -euo pipefail; : ${SUPABASE_ACCESS_TOKEN:?Missing SUPABASE_ACCESS_TOKEN}; TMP=$(mktemp); npx supabase gen types typescript --project-id ahggunjqfvlmvgycisgc --schema public > \"$TMP\" && mv \"$TMP\" lib/database.generated.ts && echo \"Types generated: lib/database.generated.ts\"'"
  },
  "dependencies": {
    "@hookform/resolvers": "^5.2.1",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-alert-dialog": "^1.1.14",
    "@radix-ui/react-aspect-ratio": "^1.1.7",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.2",
    "@radix-ui/react-collapsible": "^1.1.11",
    "@radix-ui/react-context-menu": "^2.2.15",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.1.14",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.5",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toggle": "^1.1.9",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.53.0",
    "@upstash/ratelimit": "^2.0.6",
    "@upstash/redis": "^1.35.3",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "date-fns": "^4.1.0",
    "embla-carousel-react": "^8.6.0",
    "eslint-config-prettier": "^10.1.8",
    "isomorphic-dompurify": "^2.26.0",
    "lucide-react": "^0.536.0",
    "next": "15.4.5",
    "next-themes": "^0.4.6",
    "prettier": "^3.6.2",
    "react": "19.1.0",
    "react-day-picker": "^9.8.1",
    "react-dom": "19.1.0",
    "react-hook-form": "^7.62.0",
    "react-resizable-panels": "^3.0.4",
    "recharts": "^2.15.4",
    "sonner": "^2.0.7",
    "tailwind-merge": "^3.3.1",
    "vaul": "^1.1.2",
    "zod": "^4.0.15",
    "zustand": "^5.0.7"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@playwright/test": "^1.54.2",
    "@tailwindcss/postcss": "^4",
    "@testing-library/react": "^16.3.0",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@vitest/ui": "^3.2.4",
    "eslint": "^9",
    "eslint-config-next": "15.4.5",
    "playwright": "^1.54.2",
    "tailwindcss": "^4",
    "tw-animate-css": "^1.3.6",
    "typescript": "^5",
    "vitest": "^3.2.4"
  }
}
